(()=>{"use strict";class e{constructor(){this.element=document.createElement("header"),this.element.id="header",this.element.classList.add("header"),this.render()}render(){console.log("render");const e=document.getElementById("app");e&&e.insertAdjacentHTML("afterbegin",'\n      <ul class="header__navigation">\n        <li>\n          <a href="/">Home page</a>\n          <a href="/shop">Shop page</a>\n          <a href="/detail">Detail page</a>\n        </li>\n      </ul>\n    ')}}function t(e,t){return function(n){return class extends n{constructor(...n){super(...n),this.render=function(){const n=document.querySelector(e);n&&(n.innerHTML=t)}}}}}let n=class{constructor(){}render(){console.log("Rending Detailpage component")}};n=function(e,t,n,r){var o,c=arguments.length,a=c<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(a=(c<3?o(a):c>3?o(t,n,a):o(t,n))||a);return c>3&&a&&Object.defineProperty(t,n,a),a}([t("#main","HELLO WORLD FROM DETAIL")],n);let r=class{constructor(){}render(){console.log("Rending Homepage component")}};r=function(e,t,n,r){var o,c=arguments.length,a=c<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(a=(c<3?o(a):c>3?o(t,n,a):o(t,n))||a);return c>3&&a&&Object.defineProperty(t,n,a),a}([t("#main","HELLO WORLD FROM HOME PAGE")],r);class o{constructor(){this.render()}render(){console.log("Rending Shoppage component")}}class c{constructor(){this.routes=[]}get getAllRoutes(){return this.routes}addRoute(e,t){this.routes.push({path:e,component:t})}navigate(e){const t=this.routes.find((t=>t.path===e));t?(new t.component).render():console.error("Route not found")}}class a{constructor(){this.createBrowserRouter(),new e,this.renderContent(),this.configure(),window.onpopstate=()=>this.renderContent()}createBrowserRouter(){const e=new c;e.addRoute("/",r),e.addRoute("/shop",o),e.addRoute("/detail",n),console.log(e.getAllRoutes)}renderContent(){switch(new URL(location.href).pathname){case"/":(new r).render();break;case"/shop":(new o).render();break;case"/detail":(new n).render();break;default:console.error("Route not found")}}navigateHandler(e){e.preventDefault();const t=e.target;if("A"===t.tagName){const e=t.getAttribute("href");history.pushState(null,"",e),this.renderContent()}}configure(){const e=document.querySelector(".header__navigation");e&&e.addEventListener("click",this.navigateHandler)}}(function(e,t,n,r){var o,c=arguments.length,a=c<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(a=(c<3?o(a):c>3?o(t,n,a):o(t,n))||a);c>3&&a&&Object.defineProperty(t,n,a)})([function(e,t,n){const r=n.value;return{configurable:!0,get(){return r.bind(this)}}}],a.prototype,"navigateHandler",null),new a})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,